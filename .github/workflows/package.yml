name: Publish

on:
  push:
    tags: [v*]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check whether the WIT file is updated
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          commit_shas='${{ join(github.event.commits.*.id, ' ') }}'
          if [ -z "$commit_shas" ]; then
            initial_commit="$(gh api repos/${{ github.repository }}/commits | jq -r '.[0].sha')"
            commit_shas="${initial_commit} ${commit_shas}"
          fi
          declare -A changed_files
          for sha in $commit_shas; do
            commits=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${{ github.repository }}/commits/${sha}")
            filenames=$(jq --join-output '.files[] | select(.status == "modified" or .status == "added") | "\(.filename) "' <<<"${commits}")
            for filename in $filenames; do
              changed_files[$filename]=1
            done
          done
          if [ -n "$(echo "${!changed_files[@]}" | grep "wit/world.wit")" ]; then
            sed -n 's|^package .*@\(.*\);|WIT_VERSION=\1|p' wit/world.wit >> $GITHUB_ENV
          fi
      - name: Install cargo-binstall
        if: ${{ env.WIT_VERSION != '' }}
        uses: cargo-bins/cargo-binstall@v1.10.15
      - name: Build WIT
        if: ${{ env.WIT_VERSION != '' }}
        run: |
          cargo binstall wkg
          wkg wit build -o promptrs-parser.wasm
      - name: Setup Rust toolchain for wasm32-wasip2
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2
      - name: Build
        run: cargo build --release --target wasm32-wasip2
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish WIT interface to Container Registry
        if: ${{ env.WIT_VERSION != '' }}
        uses: bytecodealliance/wkg-github-action@v5
        with:
            oci-reference-without-tag: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'
            file: 'promptrs-parser.wasm'
            description: 'Core API for creating a promptrs agent'
            source: 'https://github.com/promptrs/parser'
            homepage: 'https://github.com/promptrs/parser'
            version: ${{ env.WIT_VERSION }}
            licenses: 'MIT'
      - name: Get version
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/promptrs/standard-parser
          tags: |
            type=semver,pattern={{version}}
      - name: Publish to Container Registry
        uses: bytecodealliance/wkg-github-action@v5
        with:
            oci-reference-without-tag: '${{ env.REGISTRY }}/promptrs/standard-parser'
            file: 'target/wasm32-wasip2/release/standard_parser.wasm'
            description: 'JSONschema-based parser for tool-calling AI agents'
            source: 'https://github.com/promptrs/parser'
            homepage: 'https://github.com/promptrs/parser'
            version: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            licenses: 'MIT'
